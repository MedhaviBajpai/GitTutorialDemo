
$ git config --global user.name "Medhavi"
$ git config --global user.email "medhavibajpai29@gmail.com"
$ git config --list
$ git config user.name
$ git config user.email
$ exit

$ git status
$ git init ---> initializes a git repo for first time
$ rm -rf .git ---> Removes git repository

$ git add --a
$ git rm --cached Demo.pptx ---> Removes from tracking. Stage then commit

$ git rm Demo.pptx ---> We can direct commit after this if the previous deleted file was in statging area.

$ git mv first.txt rename_second.txt ---> Auto-staged

$ git commit -m "Initial Commit"
$ git add "Tutorial Commands.txt"
$ git restore --staged "Commands.txt"
$ git diff ---> Compares the working directory with staging area in Git.
$ git commit -a -m "Direct Commit" ---> Skipping the restaging area for modified file and doing direct commit. The untracked files will not be committed.

$ git clone https://github.com/tensorflow/tensorflow.git
$ pwd ---> present working directory
$ ls ---> list show

$ touch error.log ---> Create a file
$ touch .gitignore ---> Create a .gitignore file. Then mention the name of file inside '.gitignore' file that you want to ignore in git tracker.

*.log
dir\
\dir\